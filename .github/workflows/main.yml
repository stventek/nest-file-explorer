name: Build, Publish and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: stventek/nest-file-explorer:latest

jobs:
  publish:
    name: build and publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u stventek --password-stdin
      - name: Build and Publish Backend
        run: |
          docker build --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}  .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<EOF
            cd ${{ secrets.WORK_DIR }}
            eval "echo \"$(cat docker-compose.yml)\"" > docker-compose.yml
            docker compose pull
            docker compose up -d
          EOF
        env:
          PORT: ${{ secrets.PORT }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          DRIVE_CLIENT_ID: ${{ secrets.DRIVE_CLIENT_ID }}
          DRIVE_CLIENT_SECRET: ${{ secrets.DRIVE_CLIENT_SECRET }}
          DRIVE_CALLBACK_URL: ${{ secrets.DRIVE_CALLBACK_URL }}
          SECRET: ${{ secrets.SECRET }}
          SESSION_AGE: ${{ secrets.SESSION_AGE }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      - name: cleanup
        run: rm -rf ~/.ssh
