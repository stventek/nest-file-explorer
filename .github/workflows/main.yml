name: Build, Publish and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: stventek/nest-file-explorer:latest

jobs:
  publish:
    name: build and publish image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u stventek --password-stdin

      - name: Setup qemu
        uses: docker/setup-qemu-action@v2

      - name: Build and Publish Backend
        run: |
          docker buildx create --name=builder
          docker buildx use builder
          docker buildx build --platform=linux/arm64 --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --push .

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
      - name: ssh and deploy
        uses: appleboy/ssh-action@v1.0.0
        env:
          INPUT_PORT_DB: ${{ secrets.PORT }}
          INPUT_DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          INPUT_DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          INPUT_DATABASE_USER: ${{ secrets.DATABASE_USER }}
          INPUT_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          INPUT_DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          INPUT_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          INPUT_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          INPUT_GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          INPUT_DRIVE_CLIENT_ID: ${{ secrets.DRIVE_CLIENT_ID }}
          INPUT_DRIVE_CLIENT_SECRET: ${{ secrets.DRIVE_CLIENT_SECRET }}
          INPUT_DRIVE_CALLBACK_URL: ${{ secrets.DRIVE_CALLBACK_URL }}
          INPUT_SECRET: ${{ secrets.SECRET }}
          INPUT_SESSION_AGE: ${{ secrets.SESSION_AGE }}
          INPUT_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          INPUT_REDIS_HOST: ${{ secrets.REDIS_HOST }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          allenvs: true
          script: |
            cd ${{ secrets.WORK_DIR }}
            eval "echo \"$(cat template.yml)\"" > docker-compose.yml
            docker compose pull
            docker compose up -d
